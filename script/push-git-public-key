#!/usr/bin/env python3
from argparse import ArgumentParser
from getpass import getpass
from base64 import b64encode
from requests import post
from os import path

parser = ArgumentParser(description='Push pulbic key to github.')
parser.add_argument('name', help='A descriptive name for the new key')
parser.add_argument('--path', dest='path', nargs='?', default='~/.ssh/id_rsa.pub', help='Path to public key')
parser.add_argument('--url', dest='url', nargs='?', default='https://api.github.com/user/keys', help='Post path for github server (most be compatible with application/vnd.github.v3+json)')
parser.add_argument('--token', dest='token', nargs='?', help='Github oauth token')


args = parser.parse_args()

headers = { 'Accept': 'application/vnd.github.v3+json' }
if args.token:
    headers['Authorization'] = 'token {token}'.format(token=args.token)
else:
    username = input('Github username? ')
    pword = getpass(prompt='Password? ')
    userAndPass = b64encode(str.encode("{username}:{pword}".format(username=username, pword=pword))).decode("ascii")
    headers['Authorization'] = 'Basic {token}'.format(token=userAndPass)

key = None
with open(path.expanduser(args.path)) as key_file:
    key = key_file.read()

body = {
    'title': args.name, 'key': key
}

response = post(args.url, headers=headers, json=body)

if not response.ok:
    json = response.json()
    print('Error: {error}'.format(error=json['message']))
